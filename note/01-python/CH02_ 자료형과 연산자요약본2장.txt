※ 문자열 슬라이싱
문자변수[from:stop] : from부터 stop앞까지 추출
문자변수[from:stop:step]from부터 stop앞까지 step씩 전진하면서 추출
    step 생략시 1
    from 생략시 처음부터
    stop 생략시 끝까지
3.3 논리형(True/False)
# False로 간주되는 것 : 0, ""(빈스트링), None, [], (), {}
# False외의 값은 다 True
3.4 자료형 확인 및 형변환 함수
type(변수)

isinstance(변수, 타입)

int() : 정수형으로 변환

float() : 실수형으로 변환

str() : 문자형으로 변환

bool() : 논리형으로 변환
4절. 포맷팅
포맷팅이란, 출력할 문자, 숫자, 날짜 데이터의 형식을 지정하는 것
변수와 텍스트를 결합해서 보기 좋은 형식의 새로운 텍스트를 만들 수 있음
4.1 문자열에 출력형식 지정
 # %s : 문자, %d : 정수, %f : 실수
4.2 format() 문법
#"{[인덱스]:[공백대체문자][정렬방식][자릿수][타입]}". format(변수)
    # 인덱스 : format함수 안의 매개변수의 순서
    # 정렬방식 : <(왼쪽정렬), >(오른쪽정렬), ^(중앙정렬)
    # 정수자릿수 : 출력될 자릿수. 변수 내용보다 작은 자릿수가 지정되면 자릿수 무시
    # 실수자릿수 : 출력될 자릿수, 소수점이하출력자릿수f
    # 문자자릿수 : 전체확보될자릿수[변수중출력할자릿수]s
    # 타입 : d(10진수 정수), b(2진수), x(16진수), f(실수), s(문자)
    # 공백대체문자를 쓸 경우 정렬방식을 반드시 기입해야 함
4.3 날짜 출력
print("{}".format(now))
print("{:%Y년%m월%d일 %p %I %M분 %S초}".format(now))
print("{:%Y년%m월%d일 %H시 %M분 %S초}".format(now))